#!/usr/bin/python
#
# Copyright 2021 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""Handles common tasks across all API samples."""

import argparse
from google_auth_oauthlib.flow import InstalledAppFlow
from googleapiclient import discovery


_API_NAME = 'displayvideo'
_DEFAULT_API_VERSION = 'v1'
_API_SCOPES = ['https://www.googleapis.com/auth/display-video']

_API_URL = 'https://displayvideo.googleapis.com/'

_CREDENTIALS_FILE = 'INSERT_PATH_TO_CREDENTIALS_FILE'


def get_arguments(argv, desc, parents=None):
  """Validates and parses command line arguments.

  Args:
    argv: list of strings, the command-line parameters of the application.
    desc: string, a description of the sample being executed.
    parents: list of argparsers, the argparsers passed in by the method calling
        this function
  Returns:
    The parsed command-line arguments.
  """
  parser = argparse.ArgumentParser(description=desc,
      formatter_class=argparse.RawDescriptionHelpFormatter, parents=parents)
  return parser.parse_args(argv[1:])


def get_credentials():
  """Steps through Service Account OAuth 2.0 flow to retrieve credentials."""
  return InstalledAppFlow.from_client_secrets_file(_CREDENTIALS_FILE,
      _API_SCOPES).run_local_server()


def build_discovery_url(version, label, key):
  """Builds a discovery url from which to fetch the proper discovery document.

  Args:
    version: a str indicating the version number of the API.
    label: a str indicating a label to be applied to the discovery service
        request. This may be used as a means of programmatically retrieving a
        copy of a discovery document containing allowlisted content.
    key: a str generated by the user project attempting to retrieve this
        discovery document.
  Returns:
    A str that can be used to retrieve the disovery document for the API version
    given.
  """
  discovery_url = f'{_API_URL}/$discovery/rest?version={version}'
  if label:
    discovery_url = discovery_url + f'&labels={label}'
  if key:
    discovery_url = discovery_url + f'&key={key}'
  return discovery_url


def get_service(version=_DEFAULT_API_VERSION, label=None, key=None):
  """Builds the Display & Video 360 API service used for the REST API.

  Args:
    version: a str indicating the Display & Video 360 API version to be
        retrieved.
    label: a str indicating a label to be applied to the discovery service
        request. This may be used as a means of programmatically retrieving a
        copy of a discovery document containing allowlisted content.
    key: a str identifying the user project.
  Returns:
    A googleapiclient.discovery.Resource instance used to interact with the
    Display & Video 360 API.
  """
  user_credentials = get_credentials()

  discovery_url = build_discovery_url(version, label, key)

  # Initialize client for Display & Video 360 API
  service = discovery.build(_API_NAME, version,
      discoveryServiceUrl=discovery_url, credentials=user_credentials)

  return service
